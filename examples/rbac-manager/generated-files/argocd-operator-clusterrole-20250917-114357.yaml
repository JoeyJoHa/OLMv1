# SECURITY NOTICE: Post-Installation RBAC Hardening Required
# =========================================================
# These YAML manifests contain installer permissions with INTENTIONALLY BROAD SCOPE
# for successful initial deployment. The installer ClusterRole uses wildcard
# permissions (no resourceNames specified) which defaults to '*' behavior.
#
# CRITICAL: After successful OLMv1 installation, you MUST harden these permissions:
#
# Step 1: Inspect Created Resources
# ---------------------------------
# Run these commands to see what OLMv1 actually created:
#   kubectl get clusterroles,clusterrolebindings -l app.kubernetes.io/managed-by=olm
#   kubectl get clusterextensions
#
# Step 2: Edit and Harden ClusterRole Permissions
# ------------------------------------------------
# Look for ClusterRole rules with empty resourceNames arrays in the manifests below.
# These are the rules that need hardening after the operator is installed:
#
# For ClusterRole/ClusterRoleBinding management rules:
#   Edit this file and replace empty resourceNames: [] with actual resource names:
#   resourceNames: ["argocd-operator.a1b2c3d4", "argocd-operator.e5f6g7h8"]
#   Command to find actual names: oc get clusterroles,clusterrolebindings -l app.kubernetes.io/managed-by=olm
#
# For ClusterExtension finalizer rules:
#   Edit this file and replace empty resourceNames: [] with your ClusterExtension name:
#   resourceNames: ["my-argocd-operator"]
#   Command to find actual names: oc get clusterextensions
#
# Step 3: Apply Hardened Permissions
# -----------------------------------
#   oc apply -f <this-updated-yaml-file>
#   # or
#   kubectl apply -f <this-updated-yaml-file>
#
# =========================================================
#
# Argocd-Operator Operator RBAC manifests for OLMv1 installation
# Package: argocd-operator
# Generated automatically from bundle metadata
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: rbac-manager
    app.kubernetes.io/name: argocd-operator
  name: argocd-operator-installer-clusterrole
rules:
- apiGroups: [olm.operatorframework.io]
  resources: [clusterextensions/finalizers]
  verbs: [update]
- apiGroups: [apiextensions.k8s.io]
  resources: [customresourcedefinitions]
  verbs: [create, list, watch]
- apiGroups: [apiextensions.k8s.io]
  resources: [customresourcedefinitions]
  verbs: [get, update, patch, delete]
  resourceNames: [applications.argoproj.io, applicationsets.argoproj.io, appprojects.argoproj.io,
    argocdexports.argoproj.io, argocds.argoproj.io]
- apiGroups: [rbac.authorization.k8s.io]
  resources: [clusterroles]
  verbs: [create, list, watch]
- apiGroups: [rbac.authorization.k8s.io]
  resources: [clusterroles]
  verbs: [delete, get, patch, update]
- apiGroups: [rbac.authorization.k8s.io]
  resources: [clusterroles]
  verbs: [get, update, patch, delete]
  resourceNames: [argocd-operator-metrics-reader]
- apiGroups: [rbac.authorization.k8s.io]
  resources: [clusterrolebindings]
  verbs: [create, list, watch]
- apiGroups: [rbac.authorization.k8s.io]
  resources: [clusterrolebindings]
  verbs: [delete, get, patch, update]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: rbac-manager
    app.kubernetes.io/name: argocd-operator
  name: argocd-operator-installer-rbac-clusterrole
rules:
- apiGroups: ['']
  resources: [configmaps, endpoints, events, namespaces, persistentvolumeclaims, pods,
    secrets, serviceaccounts, services, services/finalizers]
  verbs: ['*']
- apiGroups: ['']
  resources: [pods, pods/log]
  verbs: [get]
- apiGroups: [apps]
  resources: [daemonsets, deployments, replicasets, statefulsets]
  verbs: ['*']
- apiGroups: [apps]
  resourceNames: [argocd-operator]
  resources: [deployments/finalizers]
  verbs: [update]
- apiGroups: [apps.openshift.io]
  resources: [deploymentconfigs]
  verbs: ['*']
- apiGroups: [argoproj.io]
  resources: [applications, appprojects]
  verbs: ['*']
- apiGroups: [argoproj.io]
  resources: [argocdexports, argocdexports/finalizers, argocdexports/status]
  verbs: ['*']
- apiGroups: [argoproj.io]
  resources: [argocds, argocds/finalizers, argocds/status]
  verbs: ['*']
- apiGroups: [autoscaling]
  resources: [horizontalpodautoscalers]
  verbs: ['*']
- apiGroups: [batch]
  resources: [cronjobs, jobs]
  verbs: ['*']
- apiGroups: [config.openshift.io]
  resources: [clusterversions]
  verbs: [get, list, watch]
- apiGroups: [monitoring.coreos.com]
  resources: [prometheuses, servicemonitors]
  verbs: ['*']
- apiGroups: [networking.k8s.io]
  resources: [ingresses]
  verbs: ['*']
- apiGroups: [oauth.openshift.io]
  resources: [oauthclients]
  verbs: [create, delete, get, list, patch, update, watch]
- apiGroups: [rbac.authorization.k8s.io]
  resources: ['*']
  verbs: ['*']
- apiGroups: [rbac.authorization.k8s.io]
  resources: [clusterrolebindings, clusterroles]
  verbs: ['*']
- apiGroups: [route.openshift.io]
  resources: [routes, routes/custom-host]
  verbs: ['*']
- apiGroups: [template.openshift.io]
  resources: [templateconfigs, templateinstances, templates]
  verbs: ['*']
- apiGroups: [authentication.k8s.io]
  resources: [tokenreviews]
  verbs: [create]
- apiGroups: [authorization.k8s.io]
  resources: [subjectaccessreviews]
  verbs: [create]
- apiGroups: [apiextensions.k8s.io]
  resources: [customresourcedefinitions]
  verbs: [get, update, patch, delete]
  resourceNames: [applications.argoproj.io, applicationsets.argoproj.io, appprojects.argoproj.io,
    argocdexports.argoproj.io, argocds.argoproj.io]
