# IMPORTANT: Verify Correct Channel Before Deployment
# ====================================================
# The 'channel' field below is set to 'stable' by default, but many operators
# use different channels (alpha, beta, candidate, etc.).
#
# üîç FIND THE CORRECT CHANNEL:
# Use the RBAC Manager tool to discover available channels for this operator:
#
#   # Step 1: List available catalogs
#   python3 rbac-manager.py list-catalogs --skip-tls
#
#   # Step 2: Show channels for openshift-gitops-operator (use catalog from step 1)
#   python3 rbac-manager.py catalogd --catalog-name operatorhubio-catalog \
#     --package openshift-gitops-operator
#
#   # Alternative: Direct OpenShift API access
#   python3 rbac-manager.py catalogd --catalog-name operatorhubio-catalog \
#     --package openshift-gitops-operator --openshift-url https://api.cluster.example.com:6443 \
#     --openshift-token sha256~your-token
#
#   # Example: ArgoCD operator uses 'alpha' channel, not 'stable':
#   operator:
#     channel: alpha  # ‚Üê Update this based on catalogd output
#
# ‚ö†Ô∏è  Using wrong channel will cause deployment failures!
#
# =========================================================
#
# SECURITY NOTICE: Post-Installation RBAC Hardening Required
# =========================================================
# This values.yaml contains installer permissions with INTENTIONALLY BROAD SCOPE
# for successful initial deployment. The installer ClusterRole uses wildcard
# permissions (no resourceNames specified) which defaults to '*' behavior.
#
# CRITICAL: After successful OLMv1 installation, you MUST harden these permissions:
#
# Step 1: Inspect Created Resources
# ---------------------------------
# Run these commands to see what OLMv1 actually created:
#   oc get clusterroles,clusterrolebindings -l app.kubernetes.io/managed-by=olm
#   oc get clusterextensions
#
# Step 2: Update Installer Permissions  
# ------------------------------------
# In this values.yaml, look for rules with 'resourceNames: []' (empty arrays).
# These are the rules that need hardening after the operator is installed:
#
# For ClusterRole/ClusterRoleBinding management rules:
#   resourceNames: [] # After install, add: ["<packageName>.<hash1>", "<packageName>.<hash2>"]
#   Example: ['openshift-gitops-operator.a1b2c3d4', 'openshift-gitops-operator.e5f6g7h8']
#   Command: oc get clusterroles,clusterrolebindings -l app.kubernetes.io/managed-by=olm
#
# For ClusterExtension finalizer rules:
#   resourceNames: [] # After install, add: ["<your-chosen-clusterextension-name>"]
#   Example: ['my-argocd-operator'] or ['company-gitops']
#   Command: oc get clusterextensions
#
# Step 3: Redeploy with Hardened Permissions
# ------------------------------------------
#   helm upgrade <release-name> <chart-path> -f <this-values.yaml>
#
# =========================================================
#
# Openshift-Gitops-Operator Operator specific values for the generic operator-olm-v1 Helm chart
# This file demonstrates how to configure the generic chart for the openshift-gitops-operator operator
# Generated automatically from bundle metadata
nameOverride: ''
fullnameOverride: ''
operator:
  name: openshift-gitops-operator
  create: true
  appVersion: 1.14.1
  channel: '#<VERIFY_WITH_CATALOGD_AND_SET_CHANNEL>'
  packageName: openshift-gitops-operator
serviceAccount:
  create: true
  name: ''
  bind: true
  annotations: {}
  labels: {}
permissions:
  clusterRoles:
  - name: ''
    type: operator
    create: true
    customRules:
    # Operator management permissions (CRDs, RBAC, finalizers)
    - apiGroups: [olm.operatorframework.io]
      resources: [clusterextensions/finalizers]
      verbs: [update]
      resourceNames: ['#<ADD_CREATED_RESOURCE_NAMES_HERE>']
    - apiGroups: [apiextensions.k8s.io]
      resources: [customresourcedefinitions]
      verbs: [create, list, watch]
    - apiGroups: [apiextensions.k8s.io]
      resources: [customresourcedefinitions]
      verbs: [get, update, patch, delete]
      resourceNames: [analysisruns.argoproj.io, analysistemplates.argoproj.io, applications.argoproj.io,
        applicationsets.argoproj.io, appprojects.argoproj.io, argocds.argoproj.io,
        clusteranalysistemplates.argoproj.io, experiments.argoproj.io, gitopsservices.pipelines.openshift.io,
        notificationsconfigurations.argoproj.io, rolloutmanagers.argoproj.io, rollouts.argoproj.io]
    - apiGroups: [rbac.authorization.k8s.io]
      resources: [clusterroles]
      verbs: [create, list, watch]
    - apiGroups: [rbac.authorization.k8s.io]
      resources: [clusterroles]
      verbs: [delete, get, patch, update]
      resourceNames: ['#<ADD_CREATED_RESOURCE_NAMES_HERE>']
    - apiGroups: [rbac.authorization.k8s.io]
      resources: [clusterrolebindings]
      verbs: [create, list, watch]
    - apiGroups: [rbac.authorization.k8s.io]
      resources: [clusterrolebindings]
      verbs: [delete, get, patch, update]
      resourceNames: ['#<ADD_CREATED_RESOURCE_NAMES_HERE>']
  - name: ''
    type: grantor
    create: true
    customRules:
    # Application-specific permissions from bundle metadata
    - apiGroups: ['']
      resources: [configmaps, endpoints, events, namespaces, pods, secrets, serviceaccounts,
        services, services/finalizers]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: ['']
      resources: [configmaps, endpoints, events, persistentvolumeclaims, pods, secrets,
        serviceaccounts, services, services/finalizers]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: ['']
      resources: [deployments]
      verbs: [get, list, watch]
    - apiGroups: ['']
      resources: [namespaces, resourcequotas]
      verbs: [create, delete, get, list, update, watch]
    - apiGroups: ['']
      resources: [pods/eviction]
      verbs: [create]
    - apiGroups: ['']
      resources: [pods/log]
      verbs: [get]
    - apiGroups: ['']
      resources: [podtemplates]
      verbs: [get, list, watch]
    - apiGroups: [apiextensions.k8s.io]
      resources: [customresourcedefinitions]
      verbs: [get, list, watch]
    - apiGroups: [apiregistration.k8s.io]
      resources: [apiservices]
      verbs: [get, list]
    - apiGroups: [appmesh.k8s.aws]
      resources: [virtualnodes, virtualrouters]
      verbs: [get, list, patch, update, watch]
    - apiGroups: [appmesh.k8s.aws]
      resources: [virtualservices]
      verbs: [get, list, watch]
    - apiGroups: [apps]
      resources: [daemonsets, deployments, replicasets, statefulsets]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [apps]
      resources: [deployments, podtemplates, replicasets]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [apps]
      resources: [deployments/finalizers]
      verbs: [update]
    - apiGroups: [apps.openshift.io]
      resources: ['*']
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [argoproj.io]
      resources: [analysisruns, analysisruns/finalizers, experiments, experiments/finalizers]
      verbs: [create, delete, deletecollection, get, list, patch, update, watch]
    - apiGroups: [argoproj.io]
      resources: [analysistemplates]
      verbs: [create, delete, deletecollection, get, list, patch, update, watch]
    - apiGroups: [argoproj.io]
      resources: [applications, appprojects, argocds, argocds/finalizers, argocds/status]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [argoproj.io]
      resources: [clusteranalysistemplates]
      verbs: [create, delete, deletecollection, get, list, patch, update, watch]
    - apiGroups: [argoproj.io]
      resources: [notificationsconfigurations, notificationsconfigurations/finalizers]
      verbs: ['*']
    - apiGroups: [argoproj.io]
      resources: [rolloutmanagers]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [argoproj.io]
      resources: [rolloutmanagers/finalizers]
      verbs: [update]
    - apiGroups: [argoproj.io]
      resources: [rolloutmanagers/status]
      verbs: [get, patch, update]
    - apiGroups: [argoproj.io]
      resources: [rollouts, rollouts/finalizers, rollouts/scale, rollouts/status]
      verbs: [create, delete, deletecollection, get, list, patch, update, watch]
    - apiGroups: [autoscaling]
      resources: [horizontalpodautoscalers]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [batch]
      resources: [cronjobs, jobs]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [batch]
      resources: [jobs]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [config.openshift.io]
      resources: [clusterversions]
      verbs: [get, list, watch]
    - apiGroups: [console.openshift.io]
      resources: [consoleclidownloads]
      verbs: [create, get, list, patch, update, watch]
    - apiGroups: [console.openshift.io]
      resources: [consolelinks]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [console.openshift.io]
      resources: [consoleplugins]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [coordination.k8s.io]
      resources: [leases]
      verbs: [create, get, update]
    - apiGroups: [elbv2.k8s.aws]
      resources: [targetgroupbindings]
      verbs: [get, list]
    - apiGroups: [extensions]
      resources: [ingresses]
      verbs: [create, get, list, patch, watch]
    - apiGroups: [getambassador.io]
      resources: [ambassadormappings, mappings]
      verbs: [create, delete, get, list, update, watch]
    - apiGroups: [monitoring.coreos.com]
      resources: [prometheuses, prometheusrules, servicemonitors]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [networking.istio.io]
      resources: [destinationrules, virtualservices]
      verbs: [get, list, patch, update, watch]
    - apiGroups: [networking.k8s.io]
      resources: [ingresses]
      verbs: [create, get, list, patch, update, watch]
    - apiGroups: [networking.k8s.io]
      resources: [ingresses, networkpolicies]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [oauth.openshift.io]
      resources: [oauthclients]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [operators.coreos.com]
      resources: [clusterserviceversions, operatorgroups, subscriptions]
      verbs: [create, get, list, watch]
    - apiGroups: [pipelines.openshift.io]
      resources: ['*']
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [pipelines.openshift.io]
      resources: [gitopsservices]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [pipelines.openshift.io]
      resources: [gitopsservices/finalizers]
      verbs: [update]
    - apiGroups: [pipelines.openshift.io]
      resources: [gitopsservices/status]
      verbs: [get, patch, update]
    - apiGroups: [rbac.authorization.k8s.io]
      resources: ['*']
      verbs: [bind, create, delete, deletecollection, escalate, get, list, patch,
        update, watch]
    - apiGroups: [rbac.authorization.k8s.io]
      resources: [clusterrolebindings, clusterroles]
      verbs: [bind, create, delete, deletecollection, escalate, get, list, patch,
        update, watch]
      resourceNames: ['#<ADD_CREATED_RESOURCE_NAMES_HERE>']
    - apiGroups: [rbac.authorization.k8s.io]
      resources: [rolebindings, roles]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [route.openshift.io]
      resources: ['*']
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [route.openshift.io]
      resources: [routes, routes/custom-host]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [split.smi-spec.io]
      resources: [trafficsplits]
      verbs: [create, get, patch, update, watch]
    - apiGroups: [template.openshift.io]
      resources: [templateconfigs, templateinstances, templates]
      verbs: [create, delete, get, list, patch, update, watch]
    - apiGroups: [traefik.containo.us]
      resources: [traefikservices]
      verbs: [get, update, watch]
    - apiGroups: [x.getambassador.io]
      resources: [ambassadormappings, mappings]
      verbs: [create, delete, get, list, update, watch]
    - apiGroups: [authentication.k8s.io]
      resources: [tokenreviews]
      verbs: [create]
    - apiGroups: [authorization.k8s.io]
      resources: [subjectaccessreviews]
      verbs: [create]
  roles:
  - name: ''
    type: grantor
    create: true
    customRules:
    # Application-specific permissions from bundle metadata
    - apiGroups: [coordination.k8s.io]
      resources: [leases]
      verbs: [get, list, watch, create, update, patch, delete]
    - apiGroups: [apps]
      resources: [deployments]
      verbs: [get, update, patch, delete]
      resourceNames: [openshift-gitops-operator-controller-manager]
    - apiGroups: ['']
      resources: [serviceaccounts]
      verbs: [get, update, patch, delete]
      resourceNames: [openshift-gitops-operator-controller-manager]
    - apiGroups: [monitoring.coreos.com]
      resources: [servicemonitors]
      verbs: [get, update, patch, delete]
      resourceNames: [openshift-gitops-operator-metrics-monitor]
    - apiGroups: [rbac.authorization.k8s.io]
      resources: [roles]
      verbs: [get, update, patch, delete]
      resourceNames: [openshift-gitops-operator-prometheus]
    - apiGroups: [rbac.authorization.k8s.io]
      resources: [rolebindings]
      verbs: [get, update, patch, delete]
      resourceNames: [openshift-gitops-operator-prometheus]
    - apiGroups: ['']
      resources: [services]
      verbs: [get, update, patch, delete]
      resourceNames: [openshift-gitops-operator-metrics-service, openshift-gitops-operator-webhook-service]
additionalResources: []
