# RBAC-Only Configuration Example
# This demonstrates how to create only RBAC resources without deploying the operator
# Useful for scenarios where:
# - The operator is deployed separately (e.g., via GitOps)
# - You need to pre-create RBAC resources before operator deployment
# - Testing RBAC permissions independently

operator:
  name: my-operator
  # Create set to false - only creates RBAC resources, no ClusterExtension
  create: false
  appVersion: 1.0.0
  channel: stable
  packageName: my-operator

serviceAccount:
  create: true
  name: ""
  bind: true
  annotations:
    description: "Service account for operator RBAC testing"
  labels:
    purpose: rbac-only

permissions:
  clusterRoles:
    - name: ""
      type: "operator"
      create: true
      customRules:
        # Basic operator permissions
        - apiGroups: [olm.operatorframework.io]
          resources: [clusterextensions/finalizers]
          verbs: [update]
        - apiGroups: [apiextensions.k8s.io]
          resources: [customresourcedefinitions]
          verbs: [create, list, watch, get, update, patch, delete]
        # RBAC management permissions
        - apiGroups: [rbac.authorization.k8s.io]
          resources: [clusterroles, clusterrolebindings]
          verbs: [create, list, watch, get, update, patch, delete]

    - name: ""
      type: "grantor"
      create: true
      customRules:
        # Application-specific permissions
        - apiGroups: [""]
          resources: [pods, services, secrets, configmaps]
          verbs: [get, list, watch, create, update, patch, delete]
        - apiGroups: [apps]
          resources: [deployments, replicasets]
          verbs: [get, list, watch, create, update, patch, delete]

  roles:
    - name: ""
      type: "operator"
      create: true
      customRules:
        # Namespace-level operator permissions
        - apiGroups: [apps]
          resources: [deployments]
          verbs: [create, list, watch, get, update, patch, delete]
        - apiGroups: [""]
          resources: [serviceaccounts]
          verbs: [create, list, watch, get, update, patch, delete]

# No additional resources needed for RBAC-only setup
additionalResources: []
