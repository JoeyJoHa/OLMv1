RBAC Manager - Usage Examples

This document provides comprehensive examples for using the RBAC Manager tool
to work with operator bundles and OpenShift catalogs.

1. BASIC CATALOG OPERATIONS
   ========================

   # List all available catalogs with serving status and age (requires --skip-tls for self-signed certs)
   rbac-manager --list-catalogs --skip-tls

   # List catalogs with debug output
   rbac-manager --list-catalogs --skip-tls --debug

2. CATALOGD QUERY EXAMPLES
   =======================

   # Interactive catalog selection (uses port-forwarding)
   rbac-manager --catalogd

   # Query specific catalog
   rbac-manager --catalogd --catalog-name operatorhubio-catalog

   # Query with direct OpenShift API
   rbac-manager --catalogd --catalog-name operatorhubio-catalog \
     --openshift-url https://api.cluster.example.com:6443 \
     --openshift-token sha256~your-token-here

   # Show all packages in a catalog
   rbac-manager --catalogd --catalog-name operatorhubio-catalog

   # Show channels for a specific package
   rbac-manager --catalogd --catalog-name operatorhubio-catalog \
     --package quay-operator

   # Show versions for a specific channel
   rbac-manager --catalogd --catalog-name operatorhubio-catalog \
     --package quay-operator --channel stable-3.10

   # Get detailed metadata for a specific version
   rbac-manager --catalogd --catalog-name operatorhubio-catalog \
     --package quay-operator --channel stable-3.10 --version 3.10.13

3. BUNDLE EXTRACTION EXAMPLES
   ===========================

   # Extract from public bundle image
   rbac-manager --opm --image quay.io/redhat/quay-operator-bundle:v3.10.13

   # Extract with custom namespace
   rbac-manager --opm --image quay.io/redhat/quay-operator-bundle:v3.10.13 \
     --namespace quay-operator

   # Extract from private registry
   rbac-manager --opm --image private-registry.com/operator-bundle:v1.0.0 \
     --namespace my-operator --registry-token your-registry-token

   # Extract with debug output
   rbac-manager --opm --image quay.io/redhat/quay-operator-bundle:v3.10.13 \
     --namespace quay-operator --debug

   # Generate Helm values files
   rbac-manager --opm --image quay.io/redhat/quay-operator-bundle:v3.10.13 --helm

   # Apply least-privilege principles
   rbac-manager --opm --image quay.io/redhat/quay-operator-bundle:v3.10.13 --least-privileges

   # Custom output directory
   rbac-manager --opm --image quay.io/redhat/quay-operator-bundle:v3.10.13 --output ./my-operator

   # Combined flags
   rbac-manager --opm --image quay.io/redhat/quay-operator-bundle:v3.10.13 \
     --helm --least-privileges --output ./quay-operator

   # Output to stdout for piping to kubectl
   rbac-manager --opm --image quay.io/redhat/quay-operator-bundle:v3.10.13 \
     --openshift-namespace production | kubectl apply -f -

4. CONFIGURATION MANAGEMENT
   ========================

   # Generate configuration template
   rbac-manager --generate-config

   # Generate configuration in specific directory
   rbac-manager --generate-config --output ./configs/

   # Use configuration file with OPM command
   rbac-manager --config ~/.rbac-manager.yaml --opm --image quay.io/redhat/quay-operator-bundle:v3.10.13

   # Use configuration file with catalogd command
   rbac-manager --config ~/.rbac-manager.yaml --catalogd --package quay-operator

   # Configuration overrides command-line flags
   rbac-manager --config ~/.rbac-manager.yaml --opm --image <bundle-image> --helm

5. DEBUGGING AND TROUBLESHOOTING
   =============================

   # Enable debug logging for any command
   rbac-manager --list-catalogs --skip-tls --debug
   rbac-manager --catalogd --catalog-name test-catalog --debug
   rbac-manager --opm --image your-bundle --debug

   # Skip TLS verification for development environments
   rbac-manager --list-catalogs --skip-tls
   rbac-manager --catalogd --catalog-name test-catalog --skip-tls
   rbac-manager --opm --image registry.local/bundle --skip-tls

6. COMPLETE WORKFLOW EXAMPLES
   ===========================

   # Workflow 1: Discover and extract operator
   rbac-manager --list-catalogs --skip-tls
   rbac-manager --catalogd --catalog-name operatorhubio-catalog
   rbac-manager --catalogd --catalog-name operatorhubio-catalog --package quay-operator
   rbac-manager --opm --image quay.io/redhat/quay-operator-bundle:v3.10.13

   # Workflow 2: Private registry workflow
   rbac-manager --opm --image private-registry.com/my-operator:v1.0.0 \
     --namespace my-operator --registry-token $(cat ~/.registry-token)

   # Workflow 3: Development environment
   rbac-manager --list-catalogs --skip-tls --debug
   rbac-manager --catalogd --catalog-name dev-catalog --skip-tls --debug
   rbac-manager --opm --image registry.local/operator-bundle:latest --skip-tls

6. HELM INTEGRATION EXAMPLES
   =========================

   # After extracting bundle, use generated Helm values
   rbac-manager opm --image quay.io/redhat/quay-operator-bundle:v3.10.13
   
   # Deploy using Helm with generated values
   helm install my-operator /path/to/olmv1-chart \
     -f generated-quay-operator/helm/values-quay-operator.yaml

   # Deploy RBAC-only resources
   helm install my-operator-rbac /path/to/olmv1-chart \
     -f generated-quay-operator/helm/rbac-only-example.yaml

7. KUBECTL INTEGRATION EXAMPLES
   ============================

   # After extracting bundle, apply generated YAML manifests
   rbac-manager opm --image quay.io/redhat/quay-operator-bundle:v3.10.13
   
   # Apply all generated manifests
   kubectl apply -f generated-quay-operator/yaml/

   # Apply specific manifests
   kubectl apply -f generated-quay-operator/yaml/01-serviceaccount.yaml
   kubectl apply -f generated-quay-operator/yaml/02-clusterrole.yaml
   kubectl apply -f generated-quay-operator/yaml/03-clusterrolebinding.yaml
   kubectl apply -f generated-quay-operator/yaml/04-clusterextension.yaml

8. ADVANCED USAGE PATTERNS
   =======================

   # Batch processing multiple operators
   for operator in quay-operator postgres-operator redis-operator; do
     rbac-manager opm --image quay.io/redhat/${operator}-bundle:latest
   done

   # Custom namespace for all operators
   rbac-manager opm --image quay.io/redhat/quay-operator-bundle:v3.10.13 \
     --namespace operators-system

   # Extract and immediately deploy
   rbac-manager opm --image quay.io/redhat/quay-operator-bundle:v3.10.13 && \
   kubectl apply -f generated-quay-operator/yaml/

9. ERROR HANDLING EXAMPLES
   =======================

   # Handle missing opm binary
   which opm || echo "Please install opm CLI tool"

   # Handle authentication failures
   rbac-manager catalogd --catalog-name test-catalog --openshift-token invalid-token

   # Handle network issues
   rbac-manager list-catalogs --skip-tls --debug

10. INTEGRATION WITH CI/CD
    ======================

    # In CI/CD pipeline
    rbac-manager opm --image $OPERATOR_IMAGE --namespace $NAMESPACE
    kubectl apply -f generated-*/yaml/

    # With Helm in CI/CD
    rbac-manager opm --image $OPERATOR_IMAGE
    helm upgrade --install $OPERATOR_NAME /path/to/chart \
      -f generated-*/helm/values-*.yaml

For more detailed information about specific commands, use:
    rbac-manager help <command>
